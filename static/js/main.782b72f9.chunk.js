(this.webpackJsonpwebgl_render=this.webpackJsonpwebgl_render||[]).push([[0],{101:function(t,e,i){"use strict";i.r(e);var a=i(64),r=i(65);function n(t,e,i){var a=t.createShader(e);if(t.shaderSource(a,i),t.compileShader(a),!t.getShaderParameter(a,t.COMPILE_STATUS))throw new Error(t.getShaderInfoLog(a));return a}function o(t,e,i){var a=t.createProgram(),r=n(t,t.VERTEX_SHADER,e),o=n(t,t.FRAGMENT_SHADER,i);if(t.attachShader(a,r),t.attachShader(a,o),t.linkProgram(a),!t.getProgramParameter(a,t.LINK_STATUS))throw new Error(t.getProgramInfoLog(a));for(var s={program:a},u=t.getProgramParameter(a,t.ACTIVE_ATTRIBUTES),c=0;c<u;c++){var d=t.getActiveAttrib(a,c);s[d.name]=t.getAttribLocation(a,d.name)}for(var l=t.getProgramParameter(a,t.ACTIVE_UNIFORMS),h=0;h<l;h++){var p=t.getActiveUniform(a,h);s[p.name]=t.getUniformLocation(a,p.name)}return s}function s(t,e,i,a,r){var n=t.createTexture();return t.bindTexture(t.TEXTURE_2D,n),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MIN_FILTER,e),t.texParameteri(t.TEXTURE_2D,t.TEXTURE_MAG_FILTER,e),i instanceof Uint8Array?t.texImage2D(t.TEXTURE_2D,0,t.RGBA,a,r,0,t.RGBA,t.UNSIGNED_BYTE,i):t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,i),t.bindTexture(t.TEXTURE_2D,null),n}function u(t,e,i){t.activeTexture(t.TEXTURE0+i),t.bindTexture(t.TEXTURE_2D,e)}function c(t,e){var i=t.createBuffer();return t.bindBuffer(t.ARRAY_BUFFER,i),t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW),i}function d(t,e,i,a){t.bindBuffer(t.ARRAY_BUFFER,e),t.enableVertexAttribArray(i),t.vertexAttribPointer(i,a,t.FLOAT,!1,0,0)}function l(t,e,i){t.bindFramebuffer(t.FRAMEBUFFER,e),i&&t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,i,0)}var h="precision mediump float;\n#define GLSLIFY 1\n\nattribute vec2 a_pos;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}\n",p={0:"#3288bd",.1:"#66c2a5",.2:"#abdda4",.3:"#e6f598",.4:"#fee08b",.5:"#fdae61",.6:"#f46d43",1:"#d53e4f"},f=function(){function t(e){Object(a.a)(this,t),this.gl=e,this.fadeOpacity=.996,this.speedFactor=.25,this.dropRate=.003,this.dropRateBump=.01,this.drawProgram=o(e,"precision mediump float;\n#define GLSLIFY 1\n\nattribute float a_index;\n\nuniform sampler2D u_particles;\nuniform float u_particles_res;\n\nvarying vec2 v_particle_pos;\n\nvoid main() {\n    vec4 color = texture2D(u_particles, vec2(\n        fract(a_index / u_particles_res),\n        floor(a_index / u_particles_res) / u_particles_res));\n\n    // decode current particle position from the pixel's RGBA value\n    v_particle_pos = vec2(\n        color.r / 255.0 + color.b,\n        color.g / 255.0 + color.a);\n\n    gl_PointSize = 1.0;\n    gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, 1.0 - 2.0 * v_particle_pos.y, 0, 1);\n}\n","precision mediump float;\n#define GLSLIFY 1\n\nuniform sampler2D u_wind;\nuniform vec2 u_wind_min;\nuniform vec2 u_wind_max;\nuniform sampler2D u_color_ramp;\n\nvarying vec2 v_particle_pos;\nfloat min = 0.01;\nvoid main() {\n    vec2 velocity = mix(u_wind_min, u_wind_max, texture2D(u_wind, v_particle_pos).rg);\n    float speed_t = length(velocity) / length(u_wind_max);\n\n    // color ramp is encoded in a 16x16 texture\n    if(abs(speed_t) < min) {\n        gl_FragColor = vec4(255.0, 255.0, 255.0, 0.0);\n    } else {\n        vec2 ramp_pos = vec2(\n        fract(16.0 * speed_t),\n        floor(16.0 * speed_t) / 16.0);\n        // gl_FragColor = vec4(255.0, 255.0, 255.0, 255.0);\n        gl_FragColor = texture2D(u_color_ramp, ramp_pos);\n    }\n}\n"),this.screenProgram=o(e,h,"precision mediump float;\n#define GLSLIFY 1\n\nuniform sampler2D u_screen;\nuniform float u_opacity;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n    vec4 color = texture2D(u_screen, 1.0 - v_tex_pos);\n    // a hack to guarantee opacity fade out even with a value close to 1.0\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\n}\n"),this.updateProgram=o(e,h,"precision highp float;\n#define GLSLIFY 1\n\nuniform sampler2D u_particles;\nuniform sampler2D u_wind;\nuniform vec2 u_wind_res;\nuniform vec2 u_wind_min;\nuniform vec2 u_wind_max;\nuniform float u_rand_seed;\nuniform float u_speed_factor;\nuniform float u_drop_rate;\nuniform float u_drop_rate_bump;\n\nvarying vec2 v_tex_pos;\n\n// pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n\n// wind speed lookup; use manual bilinear filtering based on 4 adjacent pixels for smooth interpolation\nvec2 lookup_wind(const vec2 uv) {\n    // return texture2D(u_wind, uv).rg; // lower-res hardware filtering\n    vec2 px = 1.0 / u_wind_res;\n    vec2 vc = (floor(uv * u_wind_res)) * px;\n    vec2 f = fract(uv * u_wind_res);\n    vec2 tl = texture2D(u_wind, vc).rg;\n    vec2 tr = texture2D(u_wind, vc + vec2(px.x, 0)).rg;\n    vec2 bl = texture2D(u_wind, vc + vec2(0, px.y)).rg;\n    vec2 br = texture2D(u_wind, vc + px).rg;\n    return mix(mix(tl, tr, f.x), mix(bl, br, f.x), f.y);\n}\n\nvoid main() {\n    vec4 color = texture2D(u_particles, v_tex_pos);\n    vec2 pos = vec2(\n        color.r / 255.0 + color.b,\n        color.g / 255.0 + color.a); // decode particle position from pixel RGBA\n\n    vec2 velocity = mix(u_wind_min, u_wind_max, lookup_wind(pos));\n    float speed_t = length(velocity) / length(u_wind_max);\n\n    // take EPSG:4236 distortion into account for calculating where the particle moved\n    // float distortion = cos(radians(pos.y * 180.0 - 90.0));\n    vec2 offset = vec2(velocity.x , -velocity.y) * 0.0001 * u_speed_factor;\n\n    // update particle position, wrapping around the date line\n    pos = fract(1.0 + pos + offset);\n\n    // a random seed to use for the particle drop\n    vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n\n    // drop rate is a chance a particle will restart at random position, to avoid degeneration\n    float drop_rate = u_drop_rate + speed_t * u_drop_rate_bump;\n    float drop = step(1.0 - drop_rate, rand(seed));\n\n    vec2 random_pos = vec2(\n        rand(seed + 1.3),\n        rand(seed + 2.1));\n    pos = mix(pos, random_pos, drop);\n\n    // encode the new particle position back into RGBA\n    gl_FragColor = vec4(\n        fract(pos * 255.0),\n        floor(pos * 255.0) / 255.0);\n}\n"),this.quadBuffer=c(e,new Float32Array([0,0,1,0,0,1,0,1,1,0,1,1])),this.framebuffer=e.createFramebuffer(),this.setColorRamp(p),this.resize()}return Object(r.a)(t,[{key:"resize",value:function(){var t=this.gl,e=new Uint8Array(t.canvas.width*t.canvas.height*4);this.backgroundTexture=s(t,t.NEAREST,e,t.canvas.width,t.canvas.height),this.screenTexture=s(t,t.NEAREST,e,t.canvas.width,t.canvas.height)}},{key:"setColorRamp",value:function(t){this.colorRampTexture=s(this.gl,this.gl.LINEAR,function(t){var e=document.createElement("canvas"),i=e.getContext("2d");e.width=256,e.height=1;var a=i.createLinearGradient(0,0,256,0);for(var r in t)a.addColorStop(+r,t[r]);return i.fillStyle=a,i.fillRect(0,0,256,1),new Uint8Array(i.getImageData(0,0,256,1).data)}(t),16,16)}},{key:"numParticles",get:function(){return this._numParticles},set:function(t){var e=this.gl,i=this.particleStateResolution=Math.ceil(Math.sqrt(t));this._numParticles=i*i;for(var a=new Uint8Array(4*this._numParticles),r=0;r<a.length;r++)a[r]=Math.floor(256*Math.random());this.particleStateTexture0=s(e,e.NEAREST,a,i,i),this.particleStateTexture1=s(e,e.NEAREST,a,i,i);for(var n=new Float32Array(this._numParticles),o=0;o<this._numParticles;o++)n[o]=o;this.particleIndexBuffer=c(e,n)}},{key:"setWind",value:function(t){this.windData=t;var e=t.textureHeight,i=t.textureWidth;this.windTexture=s(this.gl,this.gl.LINEAR,t.image,i,e)}},{key:"draw",value:function(){var t=this.gl;t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),u(t,this.windTexture,0),u(t,this.particleStateTexture0,1),this.drawScreen(),this.updateParticles()}},{key:"drawScreen",value:function(){var t=this.gl;l(t,this.framebuffer,this.screenTexture),t.viewport(0,0,t.canvas.width,t.canvas.height),this.drawTexture(this.backgroundTexture,this.fadeOpacity),this.drawParticles(),l(t,null),t.enable(t.BLEND),t.blendFunc(t.SRC_ALPHA,t.ONE_MINUS_SRC_ALPHA),this.drawTexture(this.screenTexture,1),t.disable(t.BLEND);var e=this.backgroundTexture;this.backgroundTexture=this.screenTexture,this.screenTexture=e}},{key:"drawTexture",value:function(t,e){var i=this.gl,a=this.screenProgram;i.useProgram(a.program),d(i,this.quadBuffer,a.a_pos,2),u(i,t,2),i.uniform1i(a.u_screen,2),i.uniform1f(a.u_opacity,e),i.drawArrays(i.TRIANGLES,0,6)}},{key:"drawParticles",value:function(){var t=this.gl,e=this.drawProgram;t.useProgram(e.program),d(t,this.particleIndexBuffer,e.a_index,1),u(t,this.colorRampTexture,2),t.uniform1i(e.u_wind,0),t.uniform1i(e.u_particles,1),t.uniform1i(e.u_color_ramp,2),t.uniform1f(e.u_particles_res,this.particleStateResolution),t.uniform2f(e.u_wind_min,this.windData.uMin,this.windData.vMin),t.uniform2f(e.u_wind_max,this.windData.uMax,this.windData.vMax),t.drawArrays(t.POINTS,0,this._numParticles)}},{key:"updateParticles",value:function(){var t=this.gl;l(t,this.framebuffer,this.particleStateTexture1),t.viewport(0,0,this.particleStateResolution,this.particleStateResolution);var e=this.updateProgram;t.useProgram(e.program),d(t,this.quadBuffer,e.a_pos,2),t.uniform1i(e.u_wind,0),t.uniform1i(e.u_particles,1),t.uniform1f(e.u_rand_seed,Math.random()),t.uniform2f(e.u_wind_res,this.windData.width,this.windData.height),t.uniform2f(e.u_wind_min,this.windData.uMin,this.windData.vMin),t.uniform2f(e.u_wind_max,this.windData.uMax,this.windData.vMax),t.uniform1f(e.u_speed_factor,this.speedFactor),t.uniform1f(e.u_drop_rate,this.dropRate),t.uniform1f(e.u_drop_rate_bump,this.dropRateBump),t.drawArrays(t.TRIANGLES,0,6);var i=this.particleStateTexture0;this.particleStateTexture0=this.particleStateTexture1,this.particleStateTexture1=i}}]),t}();var _=function(){function t(e){Object(a.a)(this,t),this.options=e,this.visibleExtent=[-180,-90,180,90],this.width=e.width||512,this.height=e.height||512,this.dataGridWidth=360,this.glCanvas=e.canvas||document.createElement("canvas"),this.gl=e.gl||this.glCanvas.getContext("webgl",{antialiasing:!1}),this.offset=e.offset||[0,0],this.pxRatio=Math.max(Math.floor(window.devicePixelRatio)||1,2),this.meta=e.meta||{},this.parent=e.parent||document.getElementById("root"),this.glCanvas.id="gl-canvas",this.stopped=!1,this.init(),this.callback=e.callback}return Object(r.a)(t,[{key:"init",value:function(){this.parent.appendChild(this.glCanvas),this.glCanvas.width=this.width,this.glCanvas.height=this.height,this.gl.width=this.width,this.gl.height=this.height,this.wind=window.wind=new f(this.gl),this.wind.numParticles=11024,this.frame(),1!==this.pxRatio&&(this.meta["retina resolution"]=!0)}},{key:"updateData",value:function(t,e,i,a){var r=this.windData=this.organizeData(t,e,i,a);this.wind.setWind(r),this.stopped=!1,this.glCanvas.style="display:block",r.image=null}},{key:"stop",value:function(){delete this.wind.windData,this.stopped=!0,this.glCanvas.style="display:none"}},{key:"organizeData",value:function(t,e,i,a){for(var r=t,n=e[0],o=e[1],s=e[2]-e[0],u=e[3]-e[1],c=this.dataGridWidth,d=this.dataGridWidth/2,l=t.length,h=a.uMin,p=a.vMin,f=a.uMax,_=a.vMax,m=Math.floor(255*Math.abs(0-h)/(f-h)),v=Math.floor(255*Math.abs(0-p)/(_-p)),g=new Uint8Array(c*d*4),w=new Uint8Array(c*d*4),x=0;x<l;x++){var T=r[x].flatCoordinates_,E=Math.floor(Math.abs(T[0]-n)/s*c),R=Math.floor(d-Math.abs(T[1]-o)/u*d),b=r[x].properties_.U,S=r[x].properties_.V,y=4*(R*c+E);w[y]=x;var A=Math.floor(255*(b-h)/(f-h)),D=Math.floor(255*(S-p)/(_-p));g[y+0]=A,g[y+1]=D,g[y+2]=0,g[y+3]=255}for(var M=0;M<d;M++)for(var P=0;P<c;P++){var F=4*(M*c+P);w[F]||(g[F+0]=m,g[F+1]=v,g[F+2]=0,g[F+3]=255)}return{image:g,uMin:h,vMin:p,uMax:f,vMax:_,width:s,height:u,textureHeight:d,textureWidth:c}}},{key:"frame",value:function(){this.wind.windData&&this.wind.draw(),requestAnimationFrame(this.frame.bind(this))}}]),t}(),m=i(76),v=i(84),g=i(81),w=i(63),x=i(82),T=i(6),E=i(83),R=i(80),b=i(79),S=i(72);i(99);var y,A=new m.a,D=new v.a({extent:[-180,-90,180,90],crossOrigin:"anonymous",source:new g.a({url:"//gibs.earthdata.nasa.gov/wmts/epsg4326/best/wmts.cgi?TIME=2020-04-27",layer:"BlueMarble_NextGeneration",format:"image/jpeg",matrixSet:"500m",tileGrid:new w.b({origin:[-180,90],resolutions:[.140625,.0703125,.03515625,.017578125,.0087890625,.00439453125,.002197265625],matrixIds:[2,3,4,5,6,7,8],tileSize:512})})}),M=new E.a({visible:!0,projection:Object(T.f)("EPSG:4326"),url:"https://uat.gibs.earthdata.nasa.gov/wmts/epsg4326/best/wmts.cgi?TIME=2020-03-21&layer=MISR_Cloud_Motion_Vector&tilematrixset=2km&Service=WMTS&Request=GetTile&Version=1.0.0&FORMAT=application%2Fvnd.mapbox-vector-tile&TileMatrix={z}&TileCol={x}&TileRow={y}",format:new x.a,tileGrid:new w.b({extent:[-180,-90,180,90],resolutions:[.5625,.28125,.140625,.0703125,.03515625,.017578125],tileSize:[512,512],sizes:[{matrixWidth:2,matrixHeight:1},{matrixWidth:3,matrixHeight:2},{matrixWidth:5,matrixHeight:3},{matrixWidth:10,matrixHeight:5},{matrixWidth:20,matrixHeight:10},{matrixWidth:40,matrixHeight:20}]})}),P=new R.a({source:M,style:[]}),F=new b.a({layers:[D,P],target:"map",view:new S.a({center:[0,0],maxZoom:12,zoom:1,extent:[-180,-90,180,90],projection:Object(T.f)("EPSG:4326")})}),I=0;M.on("tileloadstart",(function(t){I++})),M.on("tileloadend",(function(t){if(!y){var e=F.getSize(),i={uMin:-76.57695007324219,uMax:44.30181884765625,vMin:-76.57695007324219,vMax:44.30181884765625,width:e[0],height:e[1]};y=new _(i)}1===--I&&!y.stopped&&y&&y.stop(),0===I&&!U&&y&&(B?O():setTimeout((function(){N()}),1))}));var U=!1;F.getView().on("change:center",(function(){y.stop(),U=!0})),F.getView().on("propertychange",(function(t){"resolution"===t.key&&y&&(y.stop(),U=!0)})),F.on("moveend",(function(t){U=!1,0===I&&y&&O()}));var C,k,G,L,B=!1,N=function(){var t=F.getView(),e=F.getSize();G=t.calculateExtent(e),C=P.getSource().getFeaturesInExtent(G),k=t.getZoom(),L={uMin:-55.806217193603516,uMax:45.42329406738281,vMin:-5.684286117553711,vMax:44.30181884765625,width:e[0],height:e[1],ts:Date.now()},y.updateData(C,G,k,L),B||W()},O=function(t,e){var i=Date.now();return function(){i+e-Date.now()<0&&(t(),i=Date.now())}}(N,150),W=function(){var t=y.wind;A.add(t,"numParticles",144,248832),A.add(t,"fadeOpacity",.96,.999).step(.001).updateDisplay(),A.add(t,"speedFactor",.05,1),A.add(t,"dropRate",0,.1),A.add(t,"dropRateBump",0,.2),A.add(y,"dataGridWidth",18,360).step(2).onChange(X),B=!0},X=function(){y.updateData(C,G,k,L)}},99:function(t,e,i){}},[[101,1,2]]]);
//# sourceMappingURL=main.782b72f9.chunk.js.map